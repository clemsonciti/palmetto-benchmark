INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /etc/localtime required more than 50 (94) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
INFO:    underlay of /usr/bin/nvidia-smi required more than 50 (470) bind mounts
:::MLLOG {"namespace": "", "time_ms": 1689105117625, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "deepcam", "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/mlperf_log_utils.py", "lineno": 55}}
:::MLLOG {"namespace": "", "time_ms": 1689105117665, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Umbrella Corp.", "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/mlperf_log_utils.py", "lineno": 58}}
:::MLLOG {"namespace": "", "time_ms": 1689105117665, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/mlperf_log_utils.py", "lineno": 61}}
:::MLLOG {"namespace": "", "time_ms": 1689105117665, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/mlperf_log_utils.py", "lineno": 64}}
:::MLLOG {"namespace": "", "time_ms": 1689105117665, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "40xSUBMISSION_PLATFORM_PLACEHOLDER", "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/mlperf_log_utils.py", "lineno": 67}}
:::MLLOG {"namespace": "", "time_ms": 1689105117665, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 67}}
:::MLLOG {"namespace": "", "time_ms": 1689105117665, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": null, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 68}}
:::MLLOG {"namespace": "", "time_ms": 1689105117665, "event_type": "POINT_IN_TIME", "key": "seed", "value": 1689105109, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 72}}
:::MLLOG {"namespace": "", "time_ms": 1689105117670, "event_type": "POINT_IN_TIME", "key": "number_of_ranks", "value": 40, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 93}}
:::MLLOG {"namespace": "", "time_ms": 1689105117670, "event_type": "POINT_IN_TIME", "key": "number_of_nodes", "value": 20, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 94}}
:::MLLOG {"namespace": "", "time_ms": 1689105117670, "event_type": "POINT_IN_TIME", "key": "accelerators_per_node", "value": 2, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 95}}
:::MLLOG {"namespace": "", "time_ms": 1689105117670, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 80, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 98}}
:::MLLOG {"namespace": "", "time_ms": 1689105117670, "event_type": "POINT_IN_TIME", "key": "batchnorm_group_size", "value": 1, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 99}}
:::MLLOG {"namespace": "", "time_ms": 1689105117670, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_frequency", "value": 1, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 100}}
:::MLLOG {"namespace": "", "time_ms": 1689105117670, "event_type": "POINT_IN_TIME", "key": "checkpoint", "value": null, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 101}}
Constructing DeepLabv3+ model...
Number of output channels: 3
Output stride: 16
Number of Input Channels: 16
:::MLLOG {"namespace": "", "time_ms": 1689105118367, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "LAMB", "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/optimizer_helpers.py", "lineno": 134}}
:::MLLOG {"namespace": "", "time_ms": 1689105118370, "event_type": "POINT_IN_TIME", "key": "opt_lr", "value": 0.0025, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/optimizer_helpers.py", "lineno": 137}}
:::MLLOG {"namespace": "", "time_ms": 1689105118370, "event_type": "POINT_IN_TIME", "key": "opt_bias_correction", "value": true, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/optimizer_helpers.py", "lineno": 137}}
:::MLLOG {"namespace": "", "time_ms": 1689105118370, "event_type": "POINT_IN_TIME", "key": "opt_betas", "value": [0.9, 0.999], "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/optimizer_helpers.py", "lineno": 137}}
:::MLLOG {"namespace": "", "time_ms": 1689105118370, "event_type": "POINT_IN_TIME", "key": "opt_eps", "value": 1e-06, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/optimizer_helpers.py", "lineno": 137}}
:::MLLOG {"namespace": "", "time_ms": 1689105118370, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 0.01, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/optimizer_helpers.py", "lineno": 137}}
:::MLLOG {"namespace": "", "time_ms": 1689105118370, "event_type": "POINT_IN_TIME", "key": "opt_grad_averaging", "value": true, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/optimizer_helpers.py", "lineno": 137}}
:::MLLOG {"namespace": "", "time_ms": 1689105118370, "event_type": "POINT_IN_TIME", "key": "opt_max_grad_norm", "value": 1.0, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/optimizer_helpers.py", "lineno": 137}}
:::MLLOG {"namespace": "", "time_ms": 1689105118370, "event_type": "POINT_IN_TIME", "key": "scheduler_type", "value": "multistep", "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/optimizer_helpers.py", "lineno": 97}}
:::MLLOG {"namespace": "", "time_ms": 1689105118371, "event_type": "POINT_IN_TIME", "key": "scheduler_milestones", "value": [], "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/optimizer_helpers.py", "lineno": 97}}
:::MLLOG {"namespace": "", "time_ms": 1689105118371, "event_type": "POINT_IN_TIME", "key": "scheduler_decay_rate", "value": 0.2, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/optimizer_helpers.py", "lineno": 97}}
:::MLLOG {"namespace": "", "time_ms": 1689105118371, "event_type": "POINT_IN_TIME", "key": "scheduler_lr_warmup_steps", "value": 100, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/optimizer_helpers.py", "lineno": 97}}
:::MLLOG {"namespace": "", "time_ms": 1689105118371, "event_type": "POINT_IN_TIME", "key": "scheduler_lr_warmup_factor", "value": 1.0, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/utils/optimizer_helpers.py", "lineno": 97}}
DeepLabv3_plus(
  (xception_features): Xception(
    (relu): ReLU(inplace=True)
    (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): GBN(
      (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): GBN(
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (block1): Block(
      (skip): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (skipbn): GBN(
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
          (pointwise): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): SeparableConv2d_same(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
      )
    )
    (block2): Block(
      (skip): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (skipbn): GBN(
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (pointwise): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): SeparableConv2d_same(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
      )
    )
    (block3): Block(
      (skip): Conv2d(256, 728, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (skipbn): GBN(
        (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (pointwise): Conv2d(256, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
      )
    )
    (block4): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block5): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block6): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block7): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block8): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block9): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block10): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block11): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block12): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block13): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block14): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block15): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block16): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block17): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block18): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block19): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): ReLU(inplace=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (7): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block20): Block(
      (skip): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (skipbn): GBN(
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): GBN(
          (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): GBN(
          (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (5): SeparableConv2d_same(
          (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024, bias=False)
          (pointwise): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
      )
    )
    (conv3): SeparableConv2d_same(
      (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1024, bias=False)
      (pointwise): Conv2d(1024, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn3): GBN(
      (bn): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): SeparableConv2d_same(
      (conv1): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
      (pointwise): Conv2d(1536, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn4): GBN(
      (bn): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv5): SeparableConv2d_same(
      (conv1): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
      (pointwise): Conv2d(1536, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn5): GBN(
      (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (bottleneck): Bottleneck(
    (aspp1): ASPP_module(
      (atrous_convolution): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): GBN(
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU()
    )
    (aspp2): ASPP_module(
      (atrous_convolution): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False)
      (bn): GBN(
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU()
    )
    (aspp3): ASPP_module(
      (atrous_convolution): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), bias=False)
      (bn): GBN(
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU()
    )
    (aspp4): ASPP_module(
      (atrous_convolution): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), bias=False)
      (bn): GBN(
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU()
    )
    (global_avg_pool): GlobalAveragePool(
      (global_average_pool): Sequential(
        (0): AdaptiveAvgPool2d(output_size=(1, 1))
        (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): TrainableAffine()
        (3): ReLU()
      )
    )
    (conv): Conv2d(1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): GBN(
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (relu): ReLU()
  )
  (conv2): Conv2d(128, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): GBN(
    (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (relu): ReLU()
  (upsample): DeconvUpsampler(
    (deconv1): Sequential(
      (0): ConvTranspose2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1), bias=False)
      (1): GBN(
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (2): ReLU()
      (3): ConvTranspose2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1), bias=False)
      (4): GBN(
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (5): ReLU()
    )
    (conv1): Sequential(
      (0): Conv2d(304, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): GBN(
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (2): ReLU()
      (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): GBN(
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    )
    (deconv2): Sequential(
      (0): ConvTranspose2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1), bias=False)
      (1): GBN(
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (2): ReLU()
    )
    (last_deconv): Sequential(
      (0): ConvTranspose2d(256, 3, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1), bias=False)
    )
  )
)
Total number of elements: 56454720
Initialized dataset with  121266  samples.
Initialized dataset with  15158  samples.
:::MLLOG {"namespace": "", "time_ms": 1689105126123, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 121266, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 185}}
:::MLLOG {"namespace": "", "time_ms": 1689105126124, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 15158, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 187}}
:::MLLOG {"namespace": "", "time_ms": 1689105126130, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 197}}
:::MLLOG {"namespace": "", "time_ms": 1689105126131, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 198}}
:::MLLOG {"namespace": "", "time_ms": 1689105126131, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 204, "epoch_num": 1, "step_num": 0}}
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
Initialized dataset with  121266  samples.
:::MLLOG {"namespace": "", "time_ms": 1689105833047, "event_type": "POINT_IN_TIME", "key": "learning_rate", "value": 0.002475, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/trainer.py", "lineno": 94, "epoch_num": 1, "step_num": 1000}}
:::MLLOG {"namespace": "", "time_ms": 1689105833054, "event_type": "POINT_IN_TIME", "key": "train_accuracy", "value": 0.6580595016479492, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/trainer.py", "lineno": 95, "epoch_num": 1, "step_num": 1000}}
:::MLLOG {"namespace": "", "time_ms": 1689105833054, "event_type": "POINT_IN_TIME", "key": "train_loss", "value": 0.01857585310935974, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/trainer.py", "lineno": 96, "epoch_num": 1, "step_num": 1000}}
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
:::MLLOG {"namespace": "", "time_ms": 1689106193058, "event_type": "POINT_IN_TIME", "key": "learning_rate", "value": 0.002475, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/trainer.py", "lineno": 114, "epoch_num": 1, "step_num": 1515}}
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
:::MLLOG {"namespace": "", "time_ms": 1689106193061, "event_type": "POINT_IN_TIME", "key": "train_accuracy", "value": 0.6655067443847656, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/trainer.py", "lineno": 115, "epoch_num": 1, "step_num": 1515}}
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
:::MLLOG {"namespace": "", "time_ms": 1689106193061, "event_type": "POINT_IN_TIME", "key": "train_loss", "value": 0.016403798758983613, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/trainer.py", "lineno": 116, "epoch_num": 1, "step_num": 1515}}
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
:::MLLOG {"namespace": "", "time_ms": 1689106193062, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/validation.py", "lineno": 38, "epoch_num": 1}}
/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/scatter_gather.py:9: UserWarning: is_namedtuple is deprecated, please use the python checks instead
  warnings.warn("is_namedtuple is deprecated, please use the python checks instead")
:::MLLOG {"namespace": "", "time_ms": 1689106333521, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6508211165308748, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/validation.py", "lineno": 86, "epoch_num": 1, "step_num": 1515}}
:::MLLOG {"namespace": "", "time_ms": 1689106333524, "event_type": "POINT_IN_TIME", "key": "eval_loss", "value": 0.019060047560874413, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/validation.py", "lineno": 87, "epoch_num": 1, "step_num": 1515}}
:::MLLOG {"namespace": "", "time_ms": 1689106333525, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/validation.py", "lineno": 97, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1689106333526, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 226, "epoch_num": 1, "step_num": 1515}}
:::MLLOG {"namespace": "", "time_ms": 1689106333527, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 204, "epoch_num": 2, "step_num": 1515}}
:::MLLOG {"namespace": "", "time_ms": 1689106671287, "event_type": "POINT_IN_TIME", "key": "learning_rate", "value": 0.002475, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/trainer.py", "lineno": 94, "epoch_num": 2, "step_num": 2000}}
:::MLLOG {"namespace": "", "time_ms": 1689106671291, "event_type": "POINT_IN_TIME", "key": "train_accuracy", "value": 0.6983076095581054, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/trainer.py", "lineno": 95, "epoch_num": 2, "step_num": 2000}}
:::MLLOG {"namespace": "", "time_ms": 1689106671292, "event_type": "POINT_IN_TIME", "key": "train_loss", "value": 0.016778768599033357, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/trainer.py", "lineno": 96, "epoch_num": 2, "step_num": 2000}}
:::MLLOG {"namespace": "", "time_ms": 1689107362747, "event_type": "POINT_IN_TIME", "key": "learning_rate", "value": 0.002475, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/trainer.py", "lineno": 94, "epoch_num": 2, "step_num": 3000}}
:::MLLOG {"namespace": "", "time_ms": 1689107362751, "event_type": "POINT_IN_TIME", "key": "train_accuracy", "value": 0.6911171913146973, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/trainer.py", "lineno": 95, "epoch_num": 2, "step_num": 3000}}
:::MLLOG {"namespace": "", "time_ms": 1689107362751, "event_type": "POINT_IN_TIME", "key": "train_loss", "value": 0.014678700268268586, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/trainer.py", "lineno": 96, "epoch_num": 2, "step_num": 3000}}
:::MLLOG {"namespace": "", "time_ms": 1689107382259, "event_type": "POINT_IN_TIME", "key": "learning_rate", "value": 0.002475, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/trainer.py", "lineno": 114, "epoch_num": 2, "step_num": 3030}}
:::MLLOG {"namespace": "", "time_ms": 1689107382259, "event_type": "POINT_IN_TIME", "key": "train_accuracy", "value": 0.7283862590789795, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/trainer.py", "lineno": 115, "epoch_num": 2, "step_num": 3030}}
:::MLLOG {"namespace": "", "time_ms": 1689107382260, "event_type": "POINT_IN_TIME", "key": "train_loss", "value": 0.0159247949719429, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/trainer.py", "lineno": 116, "epoch_num": 2, "step_num": 3030}}
:::MLLOG {"namespace": "", "time_ms": 1689107382260, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/validation.py", "lineno": 38, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1689107511367, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6896668245522166, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/validation.py", "lineno": 86, "epoch_num": 2, "step_num": 3030}}
:::MLLOG {"namespace": "", "time_ms": 1689107511370, "event_type": "POINT_IN_TIME", "key": "eval_loss", "value": 0.016185883812577826, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/validation.py", "lineno": 87, "epoch_num": 2, "step_num": 3030}}
:::MLLOG {"namespace": "", "time_ms": 1689107511371, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/driver/validation.py", "lineno": 97, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1689107511371, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 226, "epoch_num": 2, "step_num": 3030}}
:::MLLOG {"namespace": "", "time_ms": 1689107511372, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/project/rcde/nnisbet/mlperf_hpc/deepcam/src/deepCam/train.py", "lineno": 204, "epoch_num": 3, "step_num": 3030}}
